/**
 * public class TreeNode {
 *   public int key;
 *   public TreeNode left;
 *   public TreeNode right;
 *   public TreeNode(int key) {
 *     this.key = key;
 *   }
 * }
 */
public class Solution {
  public int closest(TreeNode root, int target) {
    int ans;
    // Write your solution here
//    if (root == null) {
//       return Integer.MAX_VALUE;
//    }
    if (root.key <target ){
       if (root.right==null){
          return root.key;
       }
       ans = closest(root.right,target);
       return Math.abs(root.key - target) > Math.abs(ans - target)? ans : root.key;
    }
    if (root.key >target ){
       if (root.left==null){
          return root.key;
       }
       ans = closest(root.left,target);
       return Math.abs(root.key - target) > Math.abs(ans - target)? ans : root.key;
    }
    return root.key;
  }
}
