import java.util.Arrays;

public class Solution {
	public static int[] merge(int[] L,int[] R) {
		int[] Aimarray = new int[L.length+R.length]; 
		int i = 0,j = 0,k = 0;
		while((i<L.length || j<R.length) && k<Aimarray.length) {
			if (i>=L.length) {
				Aimarray[k] = R[j];
				k++;
				j++;
				continue;
			}
			if (j>=R.length) {
				Aimarray[k] = L[i];
				k++;
				i++;
				continue;
			}			
			if (L[i]<=R[j]) {
				Aimarray[k] = L[i];
				k++;
				i++;
			} else {
				Aimarray[k] = R[j];
				k++;
				j++;
			}
		}		
		return Aimarray;		
	}
  
  public int[] mergeSort(int[] array) {
    // Write your solution here
     if (array == null || array.length <= 1) {
		   return array;
	   }	
	   int middle = array.length/2;
	   int[] L = Arrays.copyOfRange(array,0,middle);
	   int[] R = Arrays.copyOfRange(array,middle,array.length);
	   L = mergeSort(L);
	   R = mergeSort(R);
	   array =  merge(L,R);	   
	   return array;
  }
}
